#include<stdio.h>

#include<stdlib.h>

 

struct Node{

    int data;

    struct Node * next;

};

 

struct Node* top = NULL;

 

void linkedListTraversal(struct Node *ptr)

{

    while (ptr != NULL)

    {

        printf("Element: %d\n", ptr->data);

        ptr = ptr->next; 

    }

}

 

int isEmpty(struct Node* top){

    if (top==NULL){

        return 1;

    }

    else{

        return 0;

    }

}

 

int isFull(struct Node* top){

    struct Node* p = (struct Node*)malloc(sizeof(struct Node));

    if(p==NULL){

        return 1;

    }

    else{

        return 0;

    }

}

 

struct Node* push(struct Node* top, int x){

    if(isFull(top)){

        printf("Stack Overflow\n");

    }

    else{

        struct Node* n = (struct Node*) malloc(sizeof(struct Node));

        n->data = x;

        n->next = top;

        top = n;

        return top;

        printf("%d Pushed into the stack\n",x);

    }

}

 

int pop(struct Node* tp){

    if(isEmpty(tp)){

        printf("Stack Underflow\n");

    }

    else{

        struct Node* n = tp;

        top = (tp)->next;

        int x = n->data;

        free(n);

        return x; 

    }

}

int peek(int pos)

{

     struct Node  *ptr=top;

     for (int i=0;i<pos-1 && ptr != NULL;i++)

     {

         ptr=ptr->next;

     }

     

     if(ptr!=NULL)

     {

         return ptr->data;

     }

     

     else

     {

         return -1;

     }

}

  

 

int main(){

   printf("\n\n\t\t\tBefore Insertion Of Any Node:\n");

   linkedListTraversal(top);

   

   top = push(top, 78);

   top = push(top, 7);

   top=push(top,69);

   top=push(top,90);

   

   printf("\n\n\t\t\tAfter pushing these Node Into The Stack:\n");

   linkedListTraversal(top);

   

   printf("\n\nTo Know the datas At diff Postion:\n");

   

   for (int i=1;i<5;i++)

   {

       printf("\n\n\t\t\tThe Data At %d Postition =%d\n",i,peek(i));

   }

   

   return 0;

   

}

